(in-package #:sndfile)
(defparameter *major-format-flags*
  (list (cons :wav SF_FORMAT_WAV)
        (cons :aiff SF_FORMAT_AIFF)
        (cons :au SF_FORMAT_AU)
        (cons :raw SF_FORMAT_RAW)
        (cons :paf SF_FORMAT_PAF)
        (cons :svx SF_FORMAT_SVX)
        (cons :nist SF_FORMAT_NIST)
        (cons :voc SF_FORMAT_VOC)
        (cons :ircam SF_FORMAT_IRCAM)
        (cons :w64 SF_FORMAT_W64)
        (cons :mat4 SF_FORMAT_MAT4)
        (cons :mat5 SF_FORMAT_MAT5)
        (cons :pvf SF_FORMAT_PVF)
        (cons :xi SF_FORMAT_XI)
        (cons :htk SF_FORMAT_HTK)
        (cons :sds SF_FORMAT_SDS)
        (cons :avr SF_FORMAT_AVR)
        (cons :wavex SF_FORMAT_WAVEX)
        (cons :sd2 SF_FORMAT_SD2)
        (cons :flac SF_FORMAT_FLAC)
        (cons :caf SF_FORMAT_CAF)
        (cons :wve SF_FORMAT_WVE)
        (cons :ogg SF_FORMAT_OGG)
        (cons :mpc2k SF_FORMAT_MPC2K)
        (cons :rf64 SF_FORMAT_RF64)))

(defparameter *minor-format-flags*
  (list        (cons :pcm-s8 SF_FORMAT_PCM_S8)
        (cons :pcm-16 SF_FORMAT_PCM_16)
        (cons :pcm-24 SF_FORMAT_PCM_24)
        (cons :pcm-32 SF_FORMAT_PCM_32)
        (cons :pcm-u8 SF_FORMAT_PCM_U8)
        (cons :float SF_FORMAT_FLOAT)
        (cons :double SF_FORMAT_DOUBLE)
        (cons :ulaw SF_FORMAT_ULAW)
        (cons :alaw SF_FORMAT_ALAW)
        (cons :ima-adpcm SF_FORMAT_IMA_ADPCM)
        (cons :ms-adpcm SF_FORMAT_MS_ADPCM)
        (cons :gsm610 SF_FORMAT_GSM610)
        (cons :vox-adpcm SF_FORMAT_VOX_ADPCM)
        (cons :g721-32 SF_FORMAT_G721_32)
        (cons :g723-24 SF_FORMAT_G723_24)
        (cons :g723-40 SF_FORMAT_G723_40)
        (cons :dwvw-12 SF_FORMAT_DWVW_12)
        (cons :dwvw-16 SF_FORMAT_DWVW_16)
        (cons :dwvw-24 SF_FORMAT_DWVW_24)
        (cons :dwvw-n SF_FORMAT_DWVW_N)
        (cons :dpcm-8 SF_FORMAT_DPCM_8)
        (cons :dpcm-16 SF_FORMAT_DPCM_16)
        (cons :vorbis SF_FORMAT_VORBIS)))

(defun format-to-labels (format)
  (let ((major (dpb (ldb (byte 8 16) format) (byte 8 16) 0))
        (minor (ldb (byte 8 0) format)))
    (flet ((format-to-label (format flags)
             (or (car (rassoc format flags)) :undefined)))
      (cons (format-to-label major *major-format-flags*)
            (format-to-label minor *minor-format-flags*)))))

(defun labels-to-format (labels)
  (flet ((label-to-format (label flags)
           (or (cdr (assoc label flags))
               (error "invalid labels"))))
    (logior (label-to-format (car labels) *major-format-flags*)
            (label-to-format (cdr labels) *minor-format-flags*))))